=== Summary ===
The Session Tokens (Cookie, SessionID, Hidden Field), if exposed, will usually enable an attacker to impersonate a victim and access the application illegitimately. As such, it is important that it is protected from eavesdropping at all times ? particularly whilst in transit between the Client browser and the application servers.

The following questions should be answered:
 * What cache-control directives are applied to requests/responses passing Session IDs?
 * Are these directives always present? If not, where are the exceptions?
 * Are GET requests incorporating the Session ID used?
 * If POST is used, can it be interchanged with GET?

=== Specific Steps ===
 * Test for session fixation if the application generates a session ID before login
  * Determine if the session ID before login matches the session ID after login.
 * Determine if session ID's are used over insecure channels (HTTP?)
  * Is it possible to force the application to send the session ID over HTTP? (Switch the channel)
 * Determine how session ID's are passed (GET, POST, Forms, Cookies?)
 * Test for cache-control directives: Expires: 0?

=== Notes ===

=== References ===