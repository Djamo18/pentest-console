=== Summary ===
Many web applications use and manage files as part of their daily operation. Using input validation methods that have not been well designed or deployed, an aggressor could exploit the system in order to read/write files that are not intended to be accessible; in particular situations it could be possible to execute arbitrary code or system commands. 

This kind of attack is also known as the dot-dot-slash attack (../), path traversal, directory climbing, backtracking.

During an assessment, in order to discover directory traversal and file include flaws, we need to perform two different stages:

 * (a) Input Vectors Enumeration (a systematical evaluation of each input vector)
 * (b) Testing Techniques (a methodical evaluation of each attack technique used by an aggressor to exploit the vulnerability) 

=== Specific Steps ===
 * Examine parameters (cookies too!) for
  *  Parameters which can be recognized as file related
  * Strange file extensions
  * Interesting variable names (context)
 * Use URL Encoding
{{{
%2e%2e%2f represents ../
%2e%2e/ represents ../
..%2f represents ../
%2e%2e%5c represents ..\
%2e%2e\ represents ..\
..%5c represents ..\
%252e%252e%255c represents ..\
..%255c represents ..\ and so on.
}}}
 * Use Unicode Encoding
{{{
..%c0%af represents ../
..%c1%9c represents ..\
}}}

=== Notes ===



=== References ===
 * http://www.owasp.org/index.php/Testing_for_Directory_Traversal
