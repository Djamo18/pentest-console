=== Summary ===
Cross-Site Request Forgery (CSRF) is about forcing an end user to execute unwanted actions on a web application in which he/she is currently authenticated. With little help of social engineering (like sending a link via email/chat), an attacker may force the users of a web application to execute actions of the attackers choosing. A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is the administrator account, this can compromise the entire web application.

=== Specific Steps ===
 * Find the "restricted" functionality of the application (this is likely to be the target of CSRF attacks)
 * Determine if it's possible to request a function without verification.
  * For an application to not be vulnerable, it must include session-related information in the URL, in a form of unidentifiable or unpredictable by the user
  * If it is vulnerable, test the application for:
   * GET CSRF (via html -- img tag)
   * POST CSRF (via javascript)

=== Notes ===
 
=== References ===
 * http://www.owasp.org/index.php/Testing_for_CSRF
 * http://www.0x000000.com/?i=309
 * http://jeremiahgrossman.blogspot.com/2006/09/csrf-sleeping-giant.html
 * http://www.bestsecuritytips.com/xfsection+article.articleid+6.htm
 * http://shiflett.org/articles/cross-site-request-forgeries
 * http://devlog.info/2007/09/02/cross-site-request-forgeries-csrf/