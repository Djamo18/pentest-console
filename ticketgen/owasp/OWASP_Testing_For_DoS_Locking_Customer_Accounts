=== Summary ===
In this test we check whether an attacker can lock valid user accounts by repeatedly attempting to log in with a wrong password.

Once an attacker has the ability to harvest valid user accounts, or if the user accounts are based on a well-defined, predictable format, it is an easy exercise to automate the process of sending three to five bad passwords to each account. If the attacker has determined a large number of user accounts, it is possible for them to deny legitimate access to a large portion of the user base.

=== Specific Steps ===
 * Determine as many application usernames as possible.
 * Fuzz the application login page with a known valid account and impossible passwords (Burp Suite)
  * 10 - 20 false logins should be sufficient. If the account hasn't locked out, the application is likely not locking accounts on invalid attempts
 * Test the account creation process. What happens if an already-existing user is recreated.
 * Test the password reset page. Can we recover information? Can we change an arbitrary user's password (effectively locking them out...)

=== Notes ===


=== References ===
 * http://www.owasp.org/index.php/Testing_for_DoS_Locking_Customer_Accounts
