
=== Summary ===
Cross Site Scripting is one of the most common application level attacks. Cross Site Scripting is abbreviated XSS to avoid confusion with Cascading Style Sheets (CSS). Testing for XSS frequently results in a !JavaScript alert window being displayed to the user, which may minimize the importance of the finding. However, the alert window should be interpreted as a signal that an attacker has the ability to run arbitrary code.

The application is analyzed for the three types of XSS:
 * DOM-Based
 * Stored
 * Reflected

=== Specific Steps ===
 * Run !NeXpose on the application to determine possible vectors
 * Run an application that supports forms-based authentication to determine possible vectors (N-Stalker, Acunetix)
 * Test parameters that are clearly used as output for a page
  * Search boxes and forums are popular targets
  * Determine if the application is performing output encoding
 * Search the application for possible stored XSS vectors
 * Check for hidden form fields using !WebScarab
 * Use a web proxy (Burp, !WebScarab) to fuzz potential vectors
 * Examine !JavaScript for potentially-dangerous (DOM-Based XSS) calls that:
  * Are controlled by an attacker
   * document.URL
   * document.URLEncoded
   * document.location (and many of its properties)
   * document.referrer
   * window.location
  * Write raw HTML, e.g.:
   * document.write()
   * document.writeln()
   * document.body.innerHtml()
  * Directly modifying the DOM (including DHTML events), e.g.:
   * document.forms![0].action=â¦ (and various other collections)
   * document.attachEvent()
   * document.create()
   * document.execCommand()
   * document.body -- (accessing the DOM through the body object)
   * window.attachEvent()
  * Replacing the document URL, e.g.:
   * document.location() (and assigning to location's href, host and hostname)
   * document.location.hostname()
   * document.location.replace()
   * document.location.assign()
   * document.URL()
   * window.navigate()
  * Opening/modifying a window, e.g.:
   * document.open()
   * window.open()
   * window.location
  * Directly executing script, e.g.:
   * eval()
   * window.execScript()
   * window.setInterval()
   * window.setTimeout()

=== Notes ===

=== References ===