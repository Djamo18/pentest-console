=== Summary ===
In this phase, we check that the logout function is properly implemented, and that it is not possible to “reuse” a session after logout. We also check that the application automatically logs out a user when that user has been idle for a certain amount of time, and that no sensitive data remains stored in the browser cache. 

The end of a web session is usually triggered by one of the following two events:

 * The user logs out
 * The user remains idle for a certain amount of time and the application automatically logs him/her out 

Both cases must be implemented carefully, in order to avoid introducing weaknesses that could be exploited by an attacker to gain unauthorized access. More specifically, the logout function must ensure that all session tokens (e.g.: cookies) are properly destroyed or made unusable, and that proper controls are enforced at the server side to forbid them to be used again. 

=== Specific Steps ===
 * Test for the presence of a logout function
 * Examine what happens to the session tokens when a user logs out
  * Save the current Session ID info
  * Logout & hit 'back'
  * Replace the (saved) Session ID info, can you still access the application
   * If yes, determine how long the server side session stays valid
 * Examine the browser cache for sensitive information

=== Notes ===


=== References ===
 * http://www.owasp.org/index.php/Testing_for_Logout_and_Browser_Cache_Management