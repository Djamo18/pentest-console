=== Summary ===
Several web applications allow users to reset their password if they have forgotten it, usually by sending them a password reset email and/or by asking them to answer one or more "security questions". In this test we check that this function is properly implemented and that it does not introduce any flaw in the authentication scheme. We also check whether the application allows the user to store the password in the browser ("remember password" function). 

=== Specific Steps ===
 * Are there multiple questions offered?
  * If so, try to pick a question which would have a “public” answer; for example, something Google would find with a simple query
  * Always pick questions which have a factual answer such as a “first school” or other facts which can be looked up
  * Look for questions which have few possible options such as “what make was your first car”; this question would present the attacker with a short-list of answers to guess at and based on statistics the attacker could rank answers from most to least likely 
 * Determine how many guesses you have (if possible)
  * Does the password reset allow unlimited attempts ?
  * Is there a lockout period after X incorrect answers? Keep in mind that a lockout system can be a security problem in itself, as it can be exploited by an attacker to launch a Denial of Service against users 
 * Pick the appropriate question based on analysis from above point, and do research to determine the most likely answers
 * How does the password-reset tool (once a successful answer to a question is found) behave?
  * Does it allow immediate change of the password?
  * Does it display the old password?
  * Does it email the password to some pre-defined email address?
  * The most insecure scenario here is if the password reset tool shows you the password; this gives the attacker the ability to log into the account, and unless the application provides information about the last login the victim would not know that his/her account has been compromised.
  * A less insecure scenario is if the password reset tool forces the user to immediately change his/her password. While not as stealthy as the first case, it allows the attacker to gain access and locks the real user out.
  * One of the most secure patterns to deal with application credentials is achieved if the password reset is done via an email to the address the user initially registered with, or some other email address; this forces the attacker to not only guess at which email account the password reset was sent to (unless the application tells that) but also to compromise that account in order to take control of the victim access to the application. 

=== Notes ===


=== References ===
 * http://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_and_Pwd_Reset