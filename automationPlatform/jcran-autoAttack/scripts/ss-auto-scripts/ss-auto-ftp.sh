#!/bin/bash
## Owner: jcran
## Purpose: automate service-specific scan
## Description:
##	1) Set up service enviroment
##	2) Call individual tools from toolkit
##
## Notes: Script is run automatically from ss-auto-pentest.sh (Pentest_Scripts)
##

## Set current service we're scanning (mostly for consistency among service scripts)
export AP_CURRENT_SERVICE="FTP"

## Let the kids @ home know where we're at in the hierarchy...
## -----------------------------------------------------------
if [ "$AP_DEBUG" -eq "1" ]
then	
	echo "CURRENT SCRIPT: $0"
fi

## Gather user options
## --------------------
if [ $# -ne 1 ]; then
	echo "Usage: $0 [hostList]"
	exit -1
fi

if [ -s "$1" ]
then
	if [ "$AP_DEBUG" -eq "1" ]
	then	
		echo "$AP_CURRENT_SERVICE HOSTS:\n"
		for i in `cat $1`; do echo "$i\n"; done
	fi
else
	echo "No $AP_CURRENT_SERVICE hosts in $1"
	exit
fi

## TODO: surely this can be improved...
## WGET - FTP (anonymous)
## -m mirror
## -----------------------------
if [ "$AP_DEBUG" -eq "1" ]
then	
	echo "$0 - calling wget (ftp) w/ anonymous user"
fi

mkdir $AP_RESULT_DIR/ftp_mirror
for i in `cat $1`
do
	echo "wgetting anonymous FTP directories"

	cd $AP_RESULT_DIR/ftp_mirror
	wget -m $i:21 --ftp-user=anonymous --ftp-password=anonymous > $AP_RESULT_DIR/ftp_mirror/log_$i.txt
	##echo "$!" >> $AP_PROJECT_NAME/backgroundJobs
	cd -
done


## TODO: can we background processes??? -- maybe toss all the pids in a file?
## MEDUSA
## -b suppress banner
## -M ftp FTP Module
## -f quit after first
## -h host
## -U user list
## -P pass list
## ------------------------
if [ "$AP_DEBUG" -eq "1" ]
then	
	echo "$0 - calling medusa to brute"
fi

for i in `cat $1`
do
	echo "Medusing $i"
	medusa -b -M ftp -f -h $i -U $AP_TOOLKIT/wordlist/generic-users.list -P $AP_TOOLKIT/wordlist/generic-pass.list t > $AP_RESULT_DIR/ss_auto_ftp_medusa_$i
	##echo "$!" >> $AP_PROJECT_NAME/backgroundJobs
done


