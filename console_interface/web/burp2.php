<?php
// In PHP versions earlier than 4.1.0, $HTTP_POST_FILES should be used instead
// of $_FILES.

## TODO - Check dependencies for perl script?
## TODO - ensure that this is sufficent santitization
## TODO - safe file upload
## TODO - set up directory structure
## - /var/www/scripts/parser - parser script directory
## - /var/log/ptc/burp - logfiles
## - /tmp - tmp upload

## get the project
$project= trim(filter_var($_GET['project'],FILTER_SANITIZE_STRING));

##log the query
$logfile = "/var/log/ptc/burp/burplog.txt";
$loghandle = fopen($logfile, 'a');
fwrite($loghandle, $project . "\n");

##remove spaces & gen a random number for the xml file upload
$rand = rand();
$filename = str_replace (" ", "", $project) . "-" . $rand . ".xml";

$uploaddir = '/tmp/';
$uploadfile = $uploaddir . $filename;

echo "read project as " . $project . "\n";
echo "dumping file in " . $uploadfile . "\n";

echo '<pre>';
if (move_uploaded_file($_FILES['userfile'][tmp_name], $uploadfile)) {

    echo "File is valid, and was successfully uploaded.\n";
    echo "parsing burp xml into tickets\n";
    $last_line = system('perl /var/www/scripts/parser/burp-tickets.pl ' . $uploadfile . ' ' . $project . ' >> /var/log/ptc/burp/' . $uploadfile . ".log" , $retval);
    echo 'return value: ' . $retval . "\n";  
    echo 'last line: ' . $last_line;

} else {
    echo "Possible file upload attack!\n";
}
print_r($_FILES);
print "</pre>";
?> 
