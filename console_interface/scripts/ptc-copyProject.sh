#!/bin/bash

## Moves all assets from one project to another
## 

# Usage
if [ $# -ne 2 ]; then 
 echo "USAGE: $0 [from-engagement]  [to-engagement]"
 exit 1
fi

# Get Arguments
# TODO - Sanitization
FROM=$1
TO=$2

# Check if client already exists
if [ -e /var/trac/$TO ] ; then
  echo "The client name already exists.  Archive the old engagement or think of a new name variant."
  exit 2
fi

echo "all good. starting."

if [ -d /var/svn/$1 ]; then
    if [ -d /var/svn/$2 ]; then
       echo "el problemo, senior, svn destination exists. not copying svn."
    else
       echo "copying svn..."
       cp -rf /var/svn/$1 /var/svn/$2
    fi
else
   echo "yo, that svn project doesn't exist compadre"
fi


if [ -d /var/trac/$1 ]; then
    if [ -d /var/trac/$2 ]; then
       echo "el problemo, senior, trac destination exists. not copying trac."
    else
       echo "copying trac..."
       cp -rf /var/trac/$1 /var/trac/$2
    fi
else
   echo "yo, that trac project doesn't exist compadre"
fi

# Set configuration - replace project specifics in the configuration files for this project
echo "modding trac.ini"
sed -e "s/$1/$2/g" /var/trac/$1/conf/trac.ini > /var/trac/$2/conf/trac.ini

## set perms - shouldn't be necessary if we're running as PTC user... -- need to make sure primary group is set properly, then things are all good. 
##sudo chown www-data:users /var/trac/$2 -R
##sudo chown www-data:users /var/svn/$2 -R


## resync, now that we've changed the repo directory (modding trac.ini)
trac-admin /var/trac/$2 resync


### ## not sure wtf i was thinking...
###
### # If it doesn't exist, create the new (to-)engagement
### ./startEngagement.sh $TO
### 
### echo "startEngagement called"
###
### ###### TEMPORARY STORAGE ######
### # Create a working temp-folder name
### TMPFOLDER=`uuidgen`
### TMPPATH=/tmp/$TMPFOLDER
### 
###  echo "working in $TMPPATH"
### 
### # Check that the temp-folder doesn't exist
### if [ -d $TMPPATH ]; then
###    rm -rf $TMPPATH;
### fi
### 
### # Create the temp-folder
### mkdir $TMPPATH
### 
### ###### WIKI #######
### #TODO - Split out into its own script
### mkdir $TMPATH/wiki
###   
### trac-admin /var/trac/$FROM wiki dump $TMPPATH/wiki
### trac-admin /var/trac/$TO wiki load $TMPPATH/wiki
### 
### echo "wiki copied from $FROM to $TO\n"
### 
### #### TICKETS ######
### #TODO - create
### mkdir $TMPATH/tickets
### 
### echo "can't do tickets from the commandline atm\n"
### 
### #### SVN #####
### #TODO - Split out into its own script
### mkdir $TMPATH/svn
### 
### # check out the new project
### svn co file:///var/svn/$FROM/trunk $TMPPATH/svn
### 
### # add the old files to our new svn dir
### svn export file:///var/svn/$TO/trunk $TMPPATH/svn
###
### #necessarry?
### ##mv -f TEMPLATEpentest/trunk/* .
### ##rm -Rf TEMPLATEpentest
### 
### #add all copied files to svn
### svn add $TMPPATH/svn
### 
### #check in to new project
### svn ci $TMPPATH/svn -m "copied from $TO" *
### 
### echo "svn copied from $FROM to $TO"
### 
### ###### Cleanup temp-storage ######
### #TODO -wipe?
### 
### rm -rf $TMPPATH
### 
### echo "done"


